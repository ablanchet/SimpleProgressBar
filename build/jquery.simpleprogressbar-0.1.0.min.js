/*! SimpleProgressBar 
0.1.0 
2013-08-26 */
!function(){"use strict";!function(a){var b=function(b){if(b){if(b.min<0)throw new Error("The min value cannot be negative");a(this).data("spb",b)}return a(this).data("spb")},c=function(a){a.html('<div class="progress"><div class="value" style="width: 0"/></div>')},d=function(a){var c=b.call(this);c.animate?a.animate({width:c.value+"%"}):a.width(c.value+"%")},e={init:function(d){var f=a.extend({min:0,max:100,value:0,animate:!0,onValueChanged:a.noop},d);return f.step=100/(f.max-f.min),b.call(this,f),c(this),e.setValue.call(this,f.value)},options:function(c){var d=b.call(this);return a.extend(d,c),d.step=100/(d.max-d.min),b.call(this,d),e.setValue.call(this,d.value)},getValue:function(){var a=b.call(this);return Math.round(a.value/a.step)+a.min},setValue:function(c){var f=b.call(this);c-=f.min;var g=e.getValue.call(this);return f.value=c>f.max?f.max:c<f.min?f.min:c*f.step,b.call(this,f),d.call(this,a(".value",this)),f.onValueChanged.apply(this,[g,f.value]),this},parse:function(a){if(a.length>1){var b=a[0],c=Number(a.substring(1));if("+"===b){if(!isNaN(c))return e.setValue.call(this,e.getValue.call(this)+c)}else if("-"===b&&!isNaN(c))return e.setValue.call(this,e.getValue.call(this)-c)}throw new Error("The given value is not parsable")}};a.fn.simpleProgressBar=function(a){if(e[a])return e[a].apply(this,Array.prototype.slice.call(arguments,1));if("object"==typeof a||!a&&0!==a)return e.init.apply(this,arguments);if("number"==typeof a)return e.setValue.apply(this,arguments);if("string"==typeof a)return e.parse.apply(this,arguments);throw new Error("Method "+a+" does not exist on jQuery.simpleProgressBar")},a.fn.spb=function(){return this.simpleProgressBar.apply(this,arguments)}}(jQuery)}();